<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>HTML编辑器</title>
  <link href="https://cdn.bootcdn.net/ajax/libs/normalize/8.0.1/normalize.min.css" rel="stylesheet">
  <!-- <link href="https://cdn.jsdelivr.net/npm/@wangeditor/editor@latest/dist/css/style.css" rel="stylesheet"> -->
  <link href="https://unpkg.com/@wangeditor/editor@latest/dist/css/style.css" rel="stylesheet">
  <link href="./css/layout.css" rel="stylesheet">
  <link href="./css/view.css" rel="stylesheet">

  <script src="./js/custom-elem.js"></script>
</head>

<body>
  <demo-nav title="HTML编辑器"></demo-nav>
  <div class="page-container">
    <div class="page-left">
      <demo-menu><h2><em>编辑后不会自动存草稿，请自行保存</em></h2></demo-menu>
    <h3>网页列表</h3>
    <div id="fileList"></div>
    </div>
    <div class="page-right">
      <!-- 编辑器 DOM -->
      <div style="border: 1px solid #ccc;">
        <div id="editor-toolbar" style="border-bottom: 1px solid #ccc;"></div>
        <div id="editor-text-area"></div>
      </div>

      <!-- 显示内容 -->
      <div style="margin-top: 20px;">
        <textarea id="editor-content-textarea" style="width: 100%; height: 100px; outline: none;background-color: rgba(255, 255, 255, 0.7);" readonly></textarea>
      </div>
      <div id="editor-content-view" class="editor-content-view"></div>
    <input type="text" id="filename" placeholder="输入文件名">
    <button id="saveBtn">保存</button>
    </div>
  </div>

    <script>
        // 初始化加载文件列表
        function loadFileList() {
            fetch('/files')
                .then(response => {
                    if (!response.ok) {
                        throw new Error('网络响应不是 OK');
                    }
                    return response.json();
                })
                .then(data => {
                    const fileListElement = document.getElementById('fileList');
                    fileListElement.innerHTML = ''; // 清空文件列表
                    for (const [filename, date] of Object.entries(data)) {
                        const div = document.createElement('div');
                        div.innerHTML = `${filename} (创建日期: ${date}) 
                            <button onclick="deleteFile('${filename}')">删除</button>`;
                        fileListElement.appendChild(div);
                    }
                })
                .catch(error => {
                    console.error('加载文件列表失败:', error);
                });
        }

        // 删除文件功能
        function deleteFile(filename) {
            if (confirm(`确定要删除 ${filename} 吗？`)) {
                fetch('/delete', {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ filename })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('删除失败');
                    }
                    return response.json();
                })
                .then(data => {
                    alert(data.message);
                    loadFileList(); // 重新加载文件列表
                })
                .catch(error => {
                    console.error('删除文件失败:', error);
                    alert('删除失败:' + error.message);
                });
            }
        }

// 保存文件功能，记录当前的时间，格式为 YYYY-MM-DDTHH:MM:SS
document.getElementById('saveBtn').onclick = function() {
    const filename = document.getElementById('filename').value.trim();
    if (filename === '') {
        alert('请输入文件名');
        return;
    }

    // 获取当前日期时间，格式为 ISO，但只保留到秒
    const currentDate = new Date().toISOString().slice(0, 19);

    fetch('/save', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            filename: filename,
            content: document.getElementById('editor-content-view').innerHTML,
            date: currentDate  // 使用 ISO 时间格式，保留到秒
        })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('网络响应不是 OK');
        }
        return response.json();
    })
    .then(data => {
        alert(data.message);
        loadFileList(); // 重新加载文件列表
    })
    .catch(error => {
        console.error('保存文件失败:', error);
        alert('保存失败:' + error.message);
    });
};

        // 初始加载文件列表
        loadFileList();
    </script>

  <!-- <script src="https://cdn.jsdelivr.net/npm/@wangeditor/editor@latest/dist/index.min.js"></script> -->
  <script src="https://unpkg.com/@wangeditor/editor@latest/dist/index.js"></script>
  <script>
    const E = window.wangEditor

    // 切换语言
    const LANG = location.href.indexOf('lang=en') > 0 ? 'en' : 'zh-CN'
    E.i18nChangeLanguage(LANG)

    window.editor = E.createEditor({
      selector: '#editor-text-area',
      html: '<p>hello&nbsp;world</p><p><br></p>',
      config: {
        placeholder: 'Type here...',
        MENU_CONF: {
          uploadImage: {
            fieldName: 'your-fileName',
            base64LimitSize: 10 * 1024 * 1024 // 10M 以下插入 base64
          }
        },
        onChange(editor) {
          const html = editor.getHtml()
          document.getElementById('editor-content-view').innerHTML = html
          document.getElementById('editor-content-textarea').value = html
        }
      }
    })

    window.toolbar = E.createToolbar({
      editor,
      selector: '#editor-toolbar',
      config: {}
    })
  </script>
</body>

</html>